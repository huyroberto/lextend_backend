//
// Autogenerated by Thrift Compiler (1.0.0-dev)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
ttypes.MediaType = {
  'image' : 0,
  'audio' : 1,
  'video' : 2
};
ttypes.MediaSubType = {
  'jpeg' : 0,
  'jpg' : 1,
  'png' : 2,
  'bmp' : 3,
  'mp3' : 4,
  'ogg' : 5,
  'wav' : 6,
  'mp4' : 7
};
ttypes.ResourceType = {
  'word' : 0,
  'material' : 1,
  'wordbook' : 2,
  'profile' : 3
};
var MediaInfo = module.exports.MediaInfo = function(args) {
  this.mediaType = null;
  this.mediaSubType = null;
  this.totalSize = null;
  this.resourceType = null;
  this.mediaId = null;
  this.ownerId = null;
  if (args) {
    if (args.mediaType !== undefined && args.mediaType !== null) {
      this.mediaType = args.mediaType;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field mediaType is unset!');
    }
    if (args.mediaSubType !== undefined && args.mediaSubType !== null) {
      this.mediaSubType = args.mediaSubType;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field mediaSubType is unset!');
    }
    if (args.totalSize !== undefined && args.totalSize !== null) {
      this.totalSize = args.totalSize;
    }
    if (args.resourceType !== undefined && args.resourceType !== null) {
      this.resourceType = args.resourceType;
    }
    if (args.mediaId !== undefined && args.mediaId !== null) {
      this.mediaId = args.mediaId;
    }
    if (args.ownerId !== undefined && args.ownerId !== null) {
      this.ownerId = args.ownerId;
    }
  }
};
MediaInfo.prototype = {};
MediaInfo.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.mediaType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.mediaSubType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.totalSize = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.resourceType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.mediaId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.ownerId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MediaInfo.prototype.write = function(output) {
  output.writeStructBegin('MediaInfo');
  if (this.mediaType !== null && this.mediaType !== undefined) {
    output.writeFieldBegin('mediaType', Thrift.Type.I32, 1);
    output.writeI32(this.mediaType);
    output.writeFieldEnd();
  }
  if (this.mediaSubType !== null && this.mediaSubType !== undefined) {
    output.writeFieldBegin('mediaSubType', Thrift.Type.I32, 2);
    output.writeI32(this.mediaSubType);
    output.writeFieldEnd();
  }
  if (this.totalSize !== null && this.totalSize !== undefined) {
    output.writeFieldBegin('totalSize', Thrift.Type.I64, 3);
    output.writeI64(this.totalSize);
    output.writeFieldEnd();
  }
  if (this.resourceType !== null && this.resourceType !== undefined) {
    output.writeFieldBegin('resourceType', Thrift.Type.I32, 4);
    output.writeI32(this.resourceType);
    output.writeFieldEnd();
  }
  if (this.mediaId !== null && this.mediaId !== undefined) {
    output.writeFieldBegin('mediaId', Thrift.Type.STRING, 5);
    output.writeString(this.mediaId);
    output.writeFieldEnd();
  }
  if (this.ownerId !== null && this.ownerId !== undefined) {
    output.writeFieldBegin('ownerId', Thrift.Type.STRING, 6);
    output.writeString(this.ownerId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

